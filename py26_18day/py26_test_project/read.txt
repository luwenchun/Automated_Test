项目结构：
- 公共的方法目录：common
- 测试用例类模块目录：testcases
- 测试数据目录：data
- 测试报告存放目录：reports
- 存放一些下载第三方的模块：library
- 配置文件存放目录：conf
- 日志文件存放的目录：logs
- 项目的启动文件：run_test.py


关于包导入的相关建议：

1、包导入尽量写道文件的顶部
2、包导入的顺序
    先到python的内置模块（官方库）
    再导第三方模块
    最后导入自定义的模块



## 程序运行流程：
- 1、创建测试套件

- 2、添加测试用例到套件
    - 创建loader对象，
    - 生成测试用例
        - 读取excle中的测试用例数据
        - 使用ddt根据用例数据来生成测试用例
    - 将指定路径下的测试用例加载到套件

- 3、执行测试用例程序，生成测试报告
    - runner.run(suiter)
        - 遍历出套件中所有测试用例，一条一条去执行
        - 每一条测试用例执行的流程：
            - 1、获取用例数据
            - 2、发送请求参数到接口地址(单元测试：调用功能函数，传入参数)
            - 3、获取返回的实际结果，和预期结果进行断言，看用例是否执行通过

    - 生成测试报告


## 三、写代码思路问题

问题一： 模块导入不知道怎么导？ 不清楚要那些要导入那些不用导入？

    - 需要到用什么就导入什么，用到的时候再导入

问题二：写代码没思路

    - 写代码不是盲目的写，先想再写，
    - 先想好自己要做什么事情，做这件事有哪些步骤，每个步骤要怎么通过代码去实现，
    - 写每一行代码之前都要想一下，这行代码是用来干什么的

问题三：代码优化思路：
    - 当前代码实现的功能是什么，有没有更好的方式可以实现
    - 想不到其他更好的实现方式，那就不用优化了

